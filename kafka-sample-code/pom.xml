<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>apache-kafka</artifactId>
	    <groupId>apache-kafka</groupId>
		<version>1.0.0</version>

    <name>apache-kafka</name>



    <dependencies>
	
	        <!-- logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${org.slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${org.slf4j.version}</version>
        </dependency>

        <!-- test -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>${hamcrest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>${hamcrest-all.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.surefire</groupId>
            <artifactId>surefire-logger-api</artifactId>
            <version>${maven-surefire-plugin.version}</version>
            <!-- to get around bug https://github.com/junit-team/junit5/issues/801 -->
            <scope>test</scope>
            <optional>true</optional>
        </dependency>

   
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>${kafka.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-streams</artifactId>
            <version>${kafka.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${org.slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${org.slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>kafka</artifactId>
            <version>${testcontainers-kafka.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${testcontainers-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_2.11</artifactId>
            <version>${org.apache.spark.spark-core.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_2.11</artifactId>
            <version>${org.apache.spark.spark-core.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-graphx_2.11</artifactId>
            <version>${org.apache.spark.spark-core.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming_2.11</artifactId>
            <version>${org.apache.spark.spark-core.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-mllib_2.11</artifactId>
            <version>${org.apache.spark.spark-core.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming-kafka-0-10_2.11</artifactId>
            <version>${org.apache.spark.spark-core.version}</version>
        </dependency>
        <dependency>
            <groupId>com.datastax.spark</groupId>
            <artifactId>spark-cassandra-connector_2.11</artifactId>
            <version>${com.datastax.spark.spark-cassandra-connector.version}</version>
        </dependency>
        <dependency>
            <groupId>com.datastax.spark</groupId>
            <artifactId>spark-cassandra-connector-java_2.11</artifactId>
            <version>${com.datastax.spark.spark-cassandra-connector-java.version}</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <argLine>
                        --add-opens java.base/java.time=ALL-UNNAMED
                        --add-opens
                        java.base/java.nio=ALL-UNNAMED
                        --add-opens java.base/java.util=ALL-UNNAMED
                    </argLine>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <properties>
	
	       <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <gib.referenceBranch>refs/remotes/origin/master</gib.referenceBranch>
        <gib.skipTestsForUpstreamModules>true</gib.skipTestsForUpstreamModules>
        <gib.buildUpstream>false</gib.buildUpstream>
        <gib.failOnMissingGitDir>false</gib.failOnMissingGitDir>
        <gib.failOnError>false</gib.failOnError>
        <gib.disable>true</gib.disable>
        <gib.excludePathsMatching>.*gradle-modules.*</gib.excludePathsMatching>

        <!-- used only in dependency management to force this version, not included as a direct dependency -->
        <junit.version>4.13.2</junit.version>
        <assertj.version>3.26.0</assertj.version>
        <hamcrest.version>2.2</hamcrest.version>
        <hamcrest-all.version>1.3</hamcrest-all.version>
        <mockito.version>5.12.0</mockito.version>
        <byte-buddy.version>1.14.18</byte-buddy.version>

        <!-- logging -->
        <!-- overwriting in the slf4j and logback in the hibernate-jpa, spring-data-eclipselink. When updated to the latest version remove the version from that module-->
        <org.slf4j.version>2.0.13</org.slf4j.version>
        <logback.version>1.5.6</logback.version>

        <!-- plugins -->
        <maven-surefire-plugin.version>3.2.5</maven-surefire-plugin.version>
        <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
        <exec-maven-plugin.version>3.3.0</exec-maven-plugin.version>
        <java.version>8</java.version>
        <log4j.version>1.2.17</log4j.version>
        <jmh-core.version>1.37</jmh-core.version>
        <jmh-generator.version>1.37</jmh-generator.version>
        <maven-failsafe-plugin.version>3.3.0</maven-failsafe-plugin.version>
        <commons-io.version>2.16.1</commons-io.version>
        <commons-collections4.version>4.5.0-M2</commons-collections4.version>
        <commons-lang3.version>3.14.0</commons-lang3.version>
        <commons-cli.version>1.8.0</commons-cli.version>
        <maven-war-plugin.version>3.4.0</maven-war-plugin.version>
        <javax.servlet-api.version>4.0.1</javax.servlet-api.version>
        <jstl-api.version>1.2</jstl-api.version>
        <javax.servlet.jsp-api.version>2.3.3</javax.servlet.jsp-api.version>
        <jstl.version>1.2</jstl.version>
        <jackson.version>2.17.2</jackson.version>
        <commons-fileupload.version>1.5</commons-fileupload.version>
        <junit-platform.version>1.11.0-M2</junit-platform.version>
        <junit-jupiter.version>5.11.0-M2</junit-jupiter.version>
        <junit-platform-surefire-provider.version>1.3.2</junit-platform-surefire-provider.version>
        <directory-maven-plugin.version>1.0</directory-maven-plugin.version>
        <maven-install-plugin.version>3.1.2</maven-install-plugin.version>
        <custom-pmd.version>0.0.1</custom-pmd.version>
        <maven-jxr-plugin.version>3.4.0</maven-jxr-plugin.version>
        <gitflow-incremental-builder.version>4.5.4</gitflow-incremental-builder.version>
        <maven-pmd-plugin.version>3.26.0</maven-pmd-plugin.version>
        <lombok.version>1.18.36</lombok.version>
        <h2.version>2.2.224</h2.version>
        <guava.version>33.2.1-jre</guava.version>
        <maven-jar-plugin.version>3.4.2</maven-jar-plugin.version>
        <mockito-inline.version>5.2.0</mockito-inline.version>
        <mockito-junit-jupiter.version>5.12.0</mockito-junit-jupiter.version>
        <logback.configurationFileName>logback-config-global.xml</logback.configurationFileName>
        <jsoup.version>1.17.2</jsoup.version>
        <jaxb-runtime.version>4.0.3</jaxb-runtime.version>
		
        <jackson.version>2.15.4</jackson.version> <!-- Upgrading to version >= 2.16 breaks tests -->
        <kafka.version>3.9.0</kafka.version>
        <testcontainers-kafka.version>1.19.3</testcontainers-kafka.version>
        <testcontainers-jupiter.version>1.15.3</testcontainers-jupiter.version>
        <org.apache.spark.spark-core.version>2.4.8</org.apache.spark.spark-core.version>
        <com.datastax.spark.spark-cassandra-connector.version>2.5.2</com.datastax.spark.spark-cassandra-connector.version>
        <com.datastax.spark.spark-cassandra-connector-java.version>1.6.0-M1</com.datastax.spark.spark-cassandra-connector-java.version>
    </properties>

</project>
